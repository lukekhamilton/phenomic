{"head":{"title":"How to write content using Phenomic","incomplete":true,"description":"You can write your files using any text based language like Markdown, AsciiDoc, Textile, Txt2tags or LaTeX. phenomic-theme-base provides aâ€¦"},"body":"<p>You can write your files using any text based language like\n<a href=\"https://en.wikipedia.org/wiki/Markdown\">Markdown</a>,\n<a href=\"https://en.wikipedia.org/wiki/AsciiDoc\">AsciiDoc</a>,\n<a href=\"https://en.wikipedia.org/wiki/Textile_(markup_language)\">Textile</a>,\n<a href=\"https://en.wikipedia.org/wiki/Txt2tags\">Txt2tags</a> or\n<a href=\"https://en.wikipedia.org/wiki/LaTeX\">LaTeX</a>.</p>\n<p>phenomic-theme-base provides a markdown engine but you can use anything you want.\nSee <a href=\"../configuration/\">Configuration</a> to specify your own engine.</p>\n<p>One common thing that text files will require is front matter that\ncontains some metadata about the content.</p>\n<p>If you need specific need, check out the <a href=\"../plugins/\">plugins</a> section of\nthe documentation.</p>\n<h2 id=\"front-matter\"><a href=\"#front-matter\" class=\"phenomic-HeadingAnchor\">#</a>Front matter</h2>\n<p>Here is a review of the important fields you can use.</p>\n<pre><code class=\"hljs language-yml\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-comment\"># title default = undefined</span>\n<span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">\"Page title\"</span>\n\n<span class=\"hljs-comment\"># layout default = \"Page\"</span>\n<span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">\"MyComponent\"</span> <span class=\"hljs-comment\"># name referenced in `src/routes.js`</span>\n\n<span class=\"hljs-comment\"># route default = normalized path of the markdown file</span>\n<span class=\"hljs-comment\"># eg: content/some/thing.md => /some/thing/(index.html)</span>\n<span class=\"hljs-attr\">route:</span> my-custom-url <span class=\"hljs-comment\"># will create the file /my-custom-url/(index.html)</span>\n<span class=\"hljs-comment\"># if you provide an extension, the url won't be converted to a folder + index.html</span>\n<span class=\"hljs-comment\"># eg: route: 404.html # will create the file /404.html</span>\n<span class=\"hljs-comment\"># eg: route: something.htm # will create the file /something.htm</span>\n\n<span class=\"hljs-comment\"># note that you can add others, such as `date` or anything you want/need to</span>\n<span class=\"hljs-comment\"># sort/filter</span>\n<span class=\"hljs-meta\">---</span>\n\nPage content...</code></pre>\n<p>For the <code>title</code>, note that you can additionally use a <code>metaTitle</code> field to\nspecify a alternative <code>&#x3C;title></code>.\nThis allows you to use a <code>title</code> (<code>&#x3C;h1></code>?) for the page <code>&#x3C;body></code>,\nand <code>metaTitle</code> for the meta <code>&#x3C;title></code> of the page <code>&#x3C;head></code>.</p>\n<p><strong>For <code>layout</code>, please read the <a href=\"../layouts/\">Layouts</a> documentation.</strong></p>\n<h3 id=\"front-matter-format\"><a href=\"#front-matter-format\" class=\"phenomic-HeadingAnchor\">#</a>Front matter format</h3>\n<p>Currently <strong>front matter can be written using YAML, JSON or TOML</strong> (we rely on\n<a href=\"https://www.npmjs.com/package/gray-matter\">gray-matter</a> that supports all of these\nformats out of the box).</p>\n<p>You can change the language of your front matter by specifying it after the\nfirst front matter delimiter (eg: <code>---</code>).</p>\n<pre><code class=\"hljs language-json\">---json\n{\n  <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Phenomic is awesome\"</span>\n}\n---</code></pre>\n<h2 id=\"text-format\"><a href=\"#text-format\" class=\"phenomic-HeadingAnchor\">#</a>Text format</h2>\n<pre><code class=\"hljs language-yml\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">\"Page title\"</span>\n<span class=\"hljs-meta\">---</span>\n\nHere you **can** use some _markdown_.</code></pre>\n<p>The default engine supports Markdown, but you can use whatever your want.\n<em>You will need an engine that can transform text to html.</em></p>\n<p>See <a href=\"../configuration/\">Configuration</a> to specify your own engine.</p>\n","__filename":"docs/usage/write.md","__url":"/docs/usage/write/","__resourceUrl":"/docs/usage/write/index.html","__dataUrl":"/docs/usage/write/index.html.34ffdfa5a52444aa32b43e3cdd80f561.json"}
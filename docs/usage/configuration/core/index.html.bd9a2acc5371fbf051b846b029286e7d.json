{"head":{"title":"How to configure Phenomic core?","description":"The package.json is currently the place where you can tweak Phenomic built-in features. You can use the package.json to store most of yourâ€¦"},"body":"<p>The <code>package.json</code> is currently the place where you can tweak\nPhenomic built-in features.</p>\n<p>You can use the <code>package.json</code> to store most of your configuration,\nsuch as trackers for example; Google Analytics, Disqus and so on.</p>\n<p><em>Note: You can override almost every option as a CLI flag/option\n(eg: <code>--devPort=4000</code>).</em></p>\n<p>Here is a commented <code>package.json</code> with only the interesting parts\n(with default values).</p>\n<pre><code class=\"hljs language-js\">{\n  <span class=\"hljs-comment\">// tell npm that there are a lot of fields that you don't need</span>\n  <span class=\"hljs-comment\">// and prevent publishing this folder as a npm package</span>\n  <span class=\"hljs-string\">\"private\"</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-comment\">// npm needs a 'dashed-name' (optional?)</span>\n  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"YOUR-NAME-that-might-be-used-in-some-title-tags\"</span>,\n\n  <span class=\"hljs-comment\">// phenomic uses the default package.json homepage</span>\n  <span class=\"hljs-comment\">// ** it's a required field to adjust url for production build **</span>\n  <span class=\"hljs-string\">\"homepage\"</span>: <span class=\"hljs-string\">\"http://YOUR.HOSTNAME/your-base-url-if-needed/\"</span>,\n\n  <span class=\"hljs-comment\">// here is the script part, with the ones related to Phenomic</span>\n  <span class=\"hljs-comment\">// you can add more like linting and stuff like that :)</span>\n  <span class=\"hljs-string\">\"scripts\"</span>: {\n    <span class=\"hljs-string\">\"start\"</span>: <span class=\"hljs-string\">\"phenomic start\"</span>,\n    <span class=\"hljs-string\">\"build\"</span>: <span class=\"hljs-string\">\"phenomic build\"</span>,\n  },\n  <span class=\"hljs-comment\">// Note that you can provide some flags but for now they are not documented</span>\n  <span class=\"hljs-comment\">// (start and build should be enough)</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// Here are some default environment variables set by \"phenomic\" bin</span>\n  <span class=\"hljs-comment\">// DEBUG=phenomic:*</span>\n  <span class=\"hljs-comment\">//  (to get some visual feedback during development and build)</span>\n\n  <span class=\"hljs-comment\">// Phenomic core section (default values)</span>\n  <span class=\"hljs-string\">\"phenomic\"</span>: {\n    <span class=\"hljs-comment\">// current working directory</span>\n    <span class=\"hljs-comment\">// you should not need to specify this, but who knows what you will do with</span>\n    <span class=\"hljs-comment\">// it :D</span>\n    <span class=\"hljs-string\">\"cwd\"</span>: process.cwd(),\n\n    <span class=\"hljs-comment\">// Where your markdown files are</span>\n    <span class=\"hljs-string\">\"source\"</span>: <span class=\"hljs-string\">\"content\"</span>,\n\n    <span class=\"hljs-comment\">// Where to put the build files</span>\n    <span class=\"hljs-string\">\"destination\"</span>: <span class=\"hljs-string\">\"dist\"</span>,\n\n    <span class=\"hljs-comment\">// where you have your static assets</span>\n    <span class=\"hljs-comment\">// you have multiple ways to configure this field:</span>\n    <span class=\"hljs-comment\">// - simple string (relative to source folder)</span>\n    <span class=\"hljs-comment\">// - object with path (local path, relative to source) and route in web</span>\n    <span class=\"hljs-comment\">// - a boolean to disable</span>\n    <span class=\"hljs-string\">\"assets\"</span>: <span class=\"hljs-string\">\"assets\"</span>,\n\n    <span class=\"hljs-comment\">// CNAME file generated from `homepage` hostname in the destination folder</span>\n    <span class=\"hljs-comment\">// use `true` to enable</span>\n    <span class=\"hljs-string\">\"CNAME\"</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// .nojekyll file to avoid GitHub Pages wasting time to run its default engine</span>\n    <span class=\"hljs-comment\">// (and also allow filename prefixed with a `_`)</span>\n    <span class=\"hljs-comment\">// see: https://github.com/blog/572-bypassing-jekyll-on-github-pages</span>\n    <span class=\"hljs-string\">\"nojekyll\"</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// host for development</span>\n    <span class=\"hljs-string\">\"devHost\"</span>: <span class=\"hljs-string\">\"0.0.0.0\"</span>,\n\n    <span class=\"hljs-comment\">// port for development</span>\n    <span class=\"hljs-string\">\"devPort\"</span>: <span class=\"hljs-number\">3333</span>,\n\n    <span class=\"hljs-comment\">// flag to add information during development</span>\n    <span class=\"hljs-string\">\"verbose\"</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">//  open a new tab when the dev server starts</span>\n    <span class=\"hljs-string\">\"open\"</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// generate offline requirements (service worker / appcache)</span>\n    <span class=\"hljs-comment\">// See docs/advanced/offline-browsing for more information</span>\n    <span class=\"hljs-string\">\"offline\"</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// force offline mode during development, for testing</span>\n    <span class=\"hljs-string\">\"force-offline\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-comment\">// best thing is to use this value in the CLI</span>\n    <span class=\"hljs-comment\">// $ npm start -- --force-offline</span>\n\n    <span class=\"hljs-comment\">// EXPERIMENTAL: enable webpack hard cache via Webpack hard-source-plugin</span>\n    <span class=\"hljs-string\">\"cache\"</span>: <span class=\"hljs-literal\">false</span>\n  },\n\n  <span class=\"hljs-comment\">// That's because es5 is not enough</span>\n  <span class=\"hljs-string\">\"babel\"</span>: {\n    <span class=\"hljs-string\">\"presets\"</span>: [\n      <span class=\"hljs-string\">\"babel-preset-react\"</span>,\n      <span class=\"hljs-string\">\"babel-preset-latest\"</span>,\n      <span class=\"hljs-string\">\"babel-preset-stage-1\"</span>\n    ],\n  },\n\n  <span class=\"hljs-comment\">// linting prevent errors</span>\n  <span class=\"hljs-comment\">// See 'Good practices' section.</span>\n  <span class=\"hljs-string\">\"eslintConfig\"</span>: {\n    <span class=\"hljs-comment\">// ...</span>\n  },\n  <span class=\"hljs-string\">\"stylelint\"</span>: {\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}</code></pre>\n","__filename":"docs/usage/configuration/core.md","__url":"/docs/usage/configuration/core/","__resourceUrl":"/docs/usage/configuration/core/index.html","__dataUrl":"/docs/usage/configuration/core/index.html.bd9a2acc5371fbf051b846b029286e7d.json"}